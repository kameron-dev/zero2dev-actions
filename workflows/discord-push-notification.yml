name: Discord Push Notification

on:
  push:

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          REPO_NAME=${{ github.repository }}
          REPO_LINK="https://github.com/${REPO_NAME}"
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BRANCH_LINK="${REPO_LINK}/tree/${BRANCH_NAME}"
          USER_NAME=${{ github.actor }}
          USER_LINK="https://github.com/${USER_NAME}"

          # Check if this is a new branch and has no commits
          [ "${{ github.event.created }}" == "true" ] && [ "$(jq '.commits | length' $GITHUB_EVENT_PATH)" -eq 0 ] && exit 0 

          # Extract up to 10 pushed commits from GitHub event payload
          commits=$(jq -r '.commits[:10] | .[] | "> [\(.id[0:7])](\(.url)) : \(.message | split("\n") | .[0]) - \(.author.name)"' $GITHUB_EVENT_PATH)

          # Safely generate JSON message using jq
          JSON_MESSAGE=$(jq -n \
            --arg user "[$USER_NAME]($USER_LINK)" \
            --arg branch "[$BRANCH_NAME]($BRANCH_LINK)" \
            --arg repo "[$REPO_NAME]($REPO_LINK)" \
            --arg commits "$commits" \
            '{
              content: "**\($user)** pushed to branch **\($branch)** of **\($repo)**\n\($commits)"
            }')

          # Send the formatted message to Discord
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "$JSON_MESSAGE" \
               $DISCORD_WEBHOOK_URL
